{"version":3,"file":"ngx-monaco-editor.js","sources":["../../../projects/editor/src/lib/base-editor.ts","../../../projects/editor/src/lib/config.ts","../../../projects/editor/src/lib/editor.component.ts","../../../projects/editor/src/lib/diff-editor.component.ts","../../../projects/editor/src/lib/editor.module.ts","../../../projects/editor/src/ngx-monaco-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, OnDestroy, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgxMonacoEditorConfig } from './config';\n\nlet loadedMonaco = false;\nlet loadPromise: Promise<void>;\n\nexport abstract class BaseEditor implements AfterViewInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) _editorContainer: ElementRef;\n  @Output() onInit = new EventEmitter<any>();\n  protected _editor: any;\n  protected _options: any;\n  protected _windowResizeSubscription: Subscription;\n\n  constructor(protected config: NgxMonacoEditorConfig) {}\n\n  ngAfterViewInit(): void {\n    if (loadedMonaco) {\n      // Wait until monaco editor is available\n      loadPromise.then(() => {\n        this.initMonaco(this._options);\n      });\n    } else {\n      loadedMonaco = true;\n      loadPromise = new Promise<void>((resolve: any) => {\n        const baseUrl = this.config.baseUrl || './assets/vs';\n        if (typeof ((<any>window).monaco) === 'object') {\n          resolve();\n          return;\n        }\n        const onGotAmdLoader: any = () => {\n          // Load monaco\n          // (<any>window).require.config({ paths: { 'vs': `${baseUrl}/vs` } });\n          (<any>window).require([`${baseUrl}/editor/editor.main`], () => {\n            if (typeof this.config.onMonacoLoad === 'function') {\n              this.config.onMonacoLoad();\n            }\n            this.initMonaco(this._options);\n            resolve();\n          });\n        };\n\n        // Load AMD loader if necessary\n        if (!(<any>window).require) {\n          const loaderScript: HTMLScriptElement = document.createElement('script');\n          loaderScript.type = 'text/javascript';\n          loaderScript.src = `${baseUrl}/loader.js`;\n          loaderScript.addEventListener('load', onGotAmdLoader);\n          document.body.appendChild(loaderScript);\n        } else {\n          onGotAmdLoader();\n        }\n      });\n    }\n  }\n\n  protected abstract initMonaco(options: any): void;\n\n  ngOnDestroy() {\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = undefined;\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NGX_MONACO_EDITOR_CONFIG = new InjectionToken('NGX_MONACO_EDITOR_CONFIG');\n\nexport interface NgxMonacoEditorConfig {\n  baseUrl?: string;\n  defaultOptions?: { [key: string]: any; };\n  onMonacoLoad?: Function;\n}\n","import { Component, forwardRef, Inject, Input, NgZone } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\n\nimport { BaseEditor } from './base-editor';\nimport { NGX_MONACO_EDITOR_CONFIG, NgxMonacoEditorConfig } from './config';\nimport { NgxEditorModel } from './types';\n\ndeclare var monaco: any;\n\n@Component({\n  selector: 'ngx-monaco-editor',\n  template: '<div class=\"editor-container\" #editorContainer></div>',\n  styles: [`\n      :host {\n          display: block;\n          height: 200px;\n      }\n\n      .editor-container {\n          width: 100%;\n          height: 98%;\n      }\n  `],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EditorComponent),\n    multi: true\n  }]\n})\nexport class EditorComponent extends BaseEditor implements ControlValueAccessor {\n  private _value: string = '';\n\n  propagateChange = (_: any) => {};\n  onTouched = () => {};\n\n  @Input('options')\n  set options(options: any) {\n    this._options = Object.assign({}, this.config.defaultOptions, options);\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(options);\n    }\n  }\n\n  get options(): any {\n    return this._options;\n  }\n\n  @Input('model')\n  set model(model: NgxEditorModel) {\n    this.options.model = model;\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(this.options);\n    }\n  }\n\n  constructor(private zone: NgZone, @Inject(NGX_MONACO_EDITOR_CONFIG) private editorConfig: NgxMonacoEditorConfig) {\n    super(editorConfig);\n  }\n\n  writeValue(value: any): void {\n    this._value = value || '';\n    // Fix for value change while dispose in process.\n    setTimeout(() => {\n      if (this._editor && !this.options.model) {\n        this._editor.setValue(this._value);\n      }\n    });\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  protected initMonaco(options: any): void {\n\n    const hasModel = !!options.model;\n\n    if (hasModel) {\n      const model = monaco.editor.getModel(options.model.uri || '');\n      if (model) {\n        options.model = model;\n        options.model.setValue(this._value);\n      } else {\n        options.model = monaco.editor.createModel(options.model.value, options.model.language, options.model.uri);\n      }\n    }\n\n    this._editor = monaco.editor.create(this._editorContainer.nativeElement, options);\n\n    if (!hasModel) {\n      this._editor.setValue(this._value);\n    }\n\n    this._editor.onDidChangeModelContent((e: any) => {\n      const value = this._editor.getValue();\n\n      // value is not propagated to parent when executing outside zone.\n      this.zone.run(() => {\n        this.propagateChange(value);\n        this._value = value;\n      });\n    });\n\n    this._editor.onDidBlurEditorWidget(() => {\n      this.onTouched();\n    });\n\n    // refresh layout on resize event.\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n    this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\n    this.onInit.emit(this._editor);\n  }\n\n}\n","import { Component, Inject, Input } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\nimport { BaseEditor } from './base-editor';\nimport { NGX_MONACO_EDITOR_CONFIG, NgxMonacoEditorConfig } from './config';\nimport { DiffEditorModel } from './types';\n\ndeclare var monaco: any;\n\n@Component({\n  selector: 'ngx-monaco-diff-editor',\n  template: '<div class=\"editor-container\" #editorContainer></div>',\n  styles: [`\n    :host {\n      display: block;\n      height: 200px;\n    }\n\n    .editor-container {\n      width: 100%;\n      height: 98%;\n    }\n  `]\n})\nexport class DiffEditorComponent extends BaseEditor {\n\n  _originalModel: DiffEditorModel;\n  _modifiedModel: DiffEditorModel;\n\n  @Input('options')\n  set options(options: any) {\n    this._options = Object.assign({}, this.config.defaultOptions, options);\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(options);\n    }\n  }\n\n  get options(): any {\n    return this._options;\n  }\n\n  @Input('originalModel')\n  set originalModel(model: DiffEditorModel) {\n    this._originalModel = model;\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(this.options);\n    }\n  }\n\n  @Input('modifiedModel')\n  set modifiedModel(model: DiffEditorModel) {\n    this._modifiedModel = model;\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(this.options);\n    }\n  }\n\n  constructor(@Inject(NGX_MONACO_EDITOR_CONFIG) private editorConfig: NgxMonacoEditorConfig) {\n    super(editorConfig);\n  }\n\n  protected initMonaco(options: any): void {\n\n    if (!this._originalModel || !this._modifiedModel) {\n      throw new Error('originalModel or modifiedModel not found for ngx-monaco-diff-editor');\n    }\n\n    this._originalModel.language = this._originalModel.language || options.language;\n    this._modifiedModel.language = this._modifiedModel.language || options.language;\n\n    let originalModel = monaco.editor.createModel(this._originalModel.code, this._originalModel.language);\n    let modifiedModel = monaco.editor.createModel(this._modifiedModel.code, this._modifiedModel.language);\n\n    this._editorContainer.nativeElement.innerHTML = '';\n    const theme = options.theme;\n    this._editor = monaco.editor.createDiffEditor(this._editorContainer.nativeElement, options);\n    options.theme = theme;\n    this._editor.setModel({\n      original: originalModel,\n      modified: modifiedModel\n    });\n\n    // refresh layout on resize event.\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n    this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\n    this.onInit.emit(this._editor);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NGX_MONACO_EDITOR_CONFIG, NgxMonacoEditorConfig } from './config';\nimport { DiffEditorComponent } from './diff-editor.component';\nimport { EditorComponent } from './editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    EditorComponent,\n    DiffEditorComponent\n  ],\n  exports: [\n    EditorComponent,\n    DiffEditorComponent\n  ]\n})\nexport class MonacoEditorModule {\n  public static forRoot(config: NgxMonacoEditorConfig = {}): ModuleWithProviders<MonacoEditorModule> {\n    return {\n      ngModule: MonacoEditorModule,\n      providers: [\n        { provide: NGX_MONACO_EDITOR_CONFIG, useValue: config }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BaseEditor as ɵa} from './lib/base-editor';"]}