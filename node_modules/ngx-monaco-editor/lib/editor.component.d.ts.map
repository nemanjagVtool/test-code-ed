{"version":3,"file":"editor.component.d.ts","sources":["editor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgZone } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { BaseEditor } from './base-editor';\nimport { NgxMonacoEditorConfig } from './config';\nimport { NgxEditorModel } from './types';\nexport declare class EditorComponent extends BaseEditor implements ControlValueAccessor {\n    private zone;\n    private editorConfig;\n    private _value;\n    propagateChange: (_: any) => void;\n    onTouched: () => void;\n    set options(options: any);\n    get options(): any;\n    set model(model: NgxEditorModel);\n    constructor(zone: NgZone, editorConfig: NgxMonacoEditorConfig);\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    protected initMonaco(options: any): void;\n}\n"]}